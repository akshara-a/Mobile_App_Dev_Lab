Develop a React Native application for a temperature converter calculator. The app should and display the result using a modal/alert box. The application should also feature a background image and stack navigation for a seamless user experience.
Describe the initial steps to set up a new React Native project for the temperature converter calculator. Explain how to implement stack navigation to navigate between different screens within the app.
Outline the components and layout required for the app's user interface, including input fields for entering the temperature value and selecting the unit (Celsius or Fahrenheit). Explain how to create user-friendly input forms for temperature conversion.
Describe how to set up and style the background image for the application.
Describe how to use a modal or alert box to display the converted temperature result to the user. Explain how to trigger the modal/alert box to appear with the converted temperature value.

Step - 1: Run npx create-expo-app tempApp
Step-2: Run cd tempApp
Step-3: Run npm install @react-navigation/native @react-navigation/native-stack in the terminal 
Step-4: Since it is an expo managed project, run npx expo install react-native-screens react-native-safe-area-context in the terminal 

App.js 
import { NavigationContainer } from '@react-navigation/native';
import { createNativeStackNavigator } from '@react-navigation/native-stack';
import TempForm from './screens/TempForm';
import Result from './screens/Result';


const Stack = createNativeStackNavigator();


export default function App() {
  return (
    <NavigationContainer>
      <Stack.Navigator initialRouteName="SForm">
        <Stack.Screen name="TempForm" component={TempForm} />
        <Stack.Screen name="Result" component={Result} />
      </Stack.Navigator>
    </NavigationContainer>
  );
}

TempForm.js 
import { useState } from 'react';
import { View, StyleSheet, TextInput, Button, ImageBackground} from 'react-native';
import { useNavigation } from '@react-navigation/native';


const image = { uri: 'https://cdn.pixabay.com/photo/2023/03/21/15/11/ai-generated-7867492_1280.jpg' };


export default function TempForm() {
  const navigation = useNavigation();
  const [celsius, setCelsius] = useState('');


  const handleSubmit = () => {
    // Navigate to the Result and pass the form data as params
    navigation.navigate('Result', { celsius});
  };


  return (
    <View style={styles.container}>
    <ImageBackground source={image} style={styles.image} imageStyle={{ opacity: 0.4 }}>
      <View style={styles.subcontainer}>


        <TextInput
          value={celsius}
          onChangeText={(text) => setCelsius(text)}
          placeholder="Enter celsius"
          style = {styles.input}
        />


        <Button
          title="Submit"
          onPress={handleSubmit}
          style = {styles.btn}
        />
      </View>


      </ImageBackground>
     
    </View>
  );
}


const styles = StyleSheet.create({
  container: {
      flex: 1,
      backgroundColor: '#000',
      alignItems: 'center',
      justifyContent: 'center',
  },
  subcontainer:{
    backgroundColor: 'white',
    padding: 30,
    borderRadius: 5,
  },
  image: {
    flex: 1,
    justifyContent: 'center',
    resizeMode: 'cover',
    alignSelf: 'stretch',
    alignItems: 'center',
},


  input: {
    padding: 20,
    width: 250,
  }
});

Result.js 
import { View, Button, StyleSheet, Alert } from 'react-native';
import { useRoute } from '@react-navigation/native';


export default function Result() {
  const route = useRoute();
  const { celsius } = route.params;


  // Convert Celsius to Fahrenheit
  const fahrenheit = (parseFloat(celsius) * 9/5 + 32).toFixed(2);


  const handleShowResult = () => {
    Alert.alert(
      'Temperature Result',
      `The temperature in Fahrenheit is: ${fahrenheit}Â°F`,
    );
  };


  return (
    <View style={styles.container}>
      <Button title="Show Result" onPress={handleShowResult} />
    </View>
  );
}


const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#000',
    alignItems: 'center',
    justifyContent: 'center',
  }
});



